<%- include('./partials/header') %>

<style>
  @keyframes slideFadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-slide-fade {
    animation: slideFadeIn 0.3s ease-out;
  }
</style>

<div class="flex items-center justify-center min-h-screen relative">
 
  
  <div class="w-full max-w-2xl mx-4 shadow-lg rounded-lg bg-white dark:bg-gray-800 flex flex-col h-[80vh]">
    <div class="bg-blue-600 text-white text-xl font-semibold px-4 py-3 rounded-t-lg">
      ðŸ’¬ Diskusi Perpustakaan
          
    </div>

    <ul id="messages" class="flex-1 overflow-y-auto px-4 py-2 space-y-4 flex flex-col">
      <!-- Pesan akan dimasukkan lewat JS -->
    </ul>

    <!-- Typing indicator -->
    <div id="typing" class="text-sm text-white-500 px-4 pb-2 italic hidden">Seseorang sedang mengetik...</div>

    <form id="form" class="p-4 border-t flex items-center gap-2 dark:border-gray-700">
      <!-- Tombol clear di dalam form -->
      <input id="messageInput" type="text" placeholder="Tulis pesan..."
      class="flex-1 border border-gray-300 rounded-full px-4 py-2 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 transition dark:bg-gray-700 text-white dark:border-gray-600"
        autocomplete="off">
        
        <% if (currentUserRole === 'admin') { %>
          <button type="button" id="clearBtn"
            class="text-sm bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded-full">
            Hapus Pesan
          </button>
        <% } %>
      <button type="submit"
        class="bg-blue-600 text-white px-4 py-2 rounded-full hover:bg-blue-700 transition">Kirim</button>
    </form>
    
  </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  document.getElementById('clearBtn')?.addEventListener('click', function () {
    if (confirm('Apakah Anda yakin ingin menghapus semua pesan?')) {
      fetch('/admin/clear-messages', {
        method: 'POST'
      }).then(() => {
        messages.innerHTML = ''; // Hapus dari UI juga
      });
    }
  });
  
  
  const socket = io();
  const form = document.getElementById('form');
  const input = document.getElementById('messageInput');
  const messages = document.getElementById('messages');
  const typing = document.getElementById('typing');
  const username = "<%= currentUser || 'Anonymous' %>";

  // Avatar generator
  const avatarUrl = (name) => `https://api.dicebear.com/7.x/thumbs/svg?seed=${name}`;

  // Load pesan lama
  socket.on('load messages', (msgs) => {
    msgs.forEach(addMessage);
  });

  // Pesan baru
  socket.on('chat message', (msg) => {
    addMessage(msg);
  });

  // Indicator mengetik
  input.addEventListener('input', () => {
    socket.emit('typing', username);
  });

  socket.on('typing', (from) => {
    if (from !== username) {
      typing.textContent = `${from} sedang mengetik...`;
      typing.classList.remove('hidden');
      clearTimeout(window.typingTimeout);
      window.typingTimeout = setTimeout(() => {
        typing.classList.add('hidden');
      }, 1000);
    }
  });

  // Kirim pesan
  form.addEventListener('submit', (e) => {
    e.preventDefault();
    if (input.value.trim()) {
      socket.emit('chat message', { username, text: input.value, createdAt: new Date() });
      input.value = '';
    }
  });

  // Tambahkan pesan ke UI
  function addMessage(msg) {
    const li = document.createElement('li');
    const isCurrentUser = msg.username === username;

    li.className = `animate-slide-fade flex gap-2 items-start ${isCurrentUser ? 'justify-end' : 'justify-start'}`;

    li.innerHTML = `
      ${!isCurrentUser ? `<img src="${avatarUrl(msg.username)}" alt="avatar" class="w-8 h-8 rounded-full mt-1">` : ''}
      <div class="max-w-xs ${isCurrentUser ? 'justify-text' : ''}">
        <div class="text-sm ${isCurrentUser ? 'text-blue-600 text-right' : 'text-gray-600'} font-semibold">${msg.username}</div>
        <div class="${isCurrentUser ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-800'} rounded-lg px-4 py-2 mt-1">
          <div>${msg.text}</div>
          <div class="text-xs text-right mt-1 ${isCurrentUser ? 'text-blue-200' : 'text-gray-500'}">
            ${new Date(msg.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
          </div>
        </div>
      </div>
      ${isCurrentUser ? `<img src="${avatarUrl(msg.username)}" alt="avatar" class="w-8 h-8 rounded-full mt-1">` : ''}
    `;

    messages.appendChild(li);
    messages.scrollTop = messages.scrollHeight;
  }

  // Autofocus saat masuk
  window.onload = () => {
    input.focus();
  };
</script>

<%- include('./partials/footer') %>
